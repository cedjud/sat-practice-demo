html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

.quiz {
  position: relative;
  overflow-y: scroll;
  overflow-x: hidden;
  // padding: 8px;
  // margin: -8px 8px -8px -8px;
}

.text {
  overflow-y: scroll;
  // margin: -8px 8px -8px -8px;
  // padding: 16px;
}

.question {
  position: absolute;
  // left: 100%;
  max-width: calc(100% - 20px);
  width: auto;
  transition: all .2s;

  &.is-active {

  }

  &.is-finished {

  }

  p {
    padding: 10px;
    margin-bottom: 0px;
    text-align: left;
  }

  &__title {
    font-style: italic;
  }

  &__answer {
    cursor: pointer;
    transition: all .2s;
    &:hover {
      background-color: darken(#FFF,5%);
      color: ligthen(#000,10%);
    }
  }
}



.passage {

  &__title {}

  &__copy {
      letter-spacing: 1.1px;
      margin: 0 0 16px;
      font-weight: 200;
  }

  &__highlight {
    // text-decoration: underline;
    // font-weight: 600;
    color: #666;
    padding: 3px 0px;
    background-color: #eee;

    &:before,
    &:after {
      content: "";
      // margin: 3px;
      background-color: #37474f;
    }
  }

}


// Setup breakpoint Mixins

$breakpoints: (
  'small':  767px,
  'medium': 992px,
  'large':  1200px
) !default;

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}


// Adjustments to Material Design layout.
.mdl-layout__drawer {
  // width: 85%;
  padding: 10px;
  @include respond-to('large'){
    width: 450px;
    transform: translateX(-450px);
  }
}

.mdl-layout--fixed-drawer>.mdl-layout__content {
  padding: 10px;
  @include respond-to('large'){
    margin-left: 450px;
  }
}

.mdl-layout__content {
  // height: calc(100% - 64px);
}

// card animation
.example-enter {
  opacity: 0.01;
  left: 100%;
}

.example-enter.example-enter-active {
  opacity: 1;
  left: 0%;
  transition: all 500ms ease-in;
}

.example-leave {
  opacity: 1;
  left: 0%;
}

.example-leave.example-leave-active {
  opacity: 0.01;
  left: -100%;
  transition: all 300ms ease-in;
}
